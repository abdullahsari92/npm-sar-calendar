{"version":3,"file":"sar-calendar.mjs","sources":["../../../projects/sar-calendar/src/lib/sar-calendar.service.ts","../../../projects/sar-calendar/src/lib/sar-calendar.component.ts","../../../projects/sar-calendar/src/lib/sar-calendar.component.html","../../../projects/sar-calendar/src/lib/sar-calendar.module.ts","../../../projects/sar-calendar/src/public-api.ts","../../../projects/sar-calendar/src/sar-calendar.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SarCalendarService {\n\n  constructor() { }\n}\n","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'sar-calendar',\n  templateUrl: './sar-calendar.component.html', \n  styleUrls: ['./sar-calendar.component.css']\n\n})\nexport class SarCalendarComponent implements OnInit {\n\n  @Output() startDate: EventEmitter<any> = new EventEmitter();\n  activeMount:number=new Date().getMonth() +1;\n  activeDay:number= new Date().getDate();\n  activeYear:number = new Date().getFullYear();\n  scrolllX:number=0;\n\n  @ViewChild('myDays') myDays!: ElementRef; \n  @ViewChild('yearsScroll') yearScroll!: ElementRef; \n  @ViewChild('myCalendar') myCalendar!: ElementRef; \n\n\n  @Input() monthNames: any[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  @Input() daysNames: any = {Mon:'Monday',Tue:'Tuesday',Wed:'Wednesday',Thu:'Thursday',Fri:'Friday ',Sat:'Saturday',Sun:'Sunday'};\n  @Input() IsYearUse:boolean = true;\n\n    constructor(public datepipe: DatePipe\n      ,private elRef:ElementRef\n      ) { }\n  \n    ngOnInit(): void {\n      this.getDays(this.activeMount);\n      this.getTodo( this.activeDay);\n      this.getListYears();\n    }\n  \n    ngAfterViewInit(){\n      var yearActive = this.elRef.nativeElement.querySelector('.yearActive');\n      var dayActive = this.elRef.nativeElement.querySelector('.dayActive');\n      var calendarWidth = this.myCalendar.nativeElement.offsetWidth;\n      var calendarLeft = this.myCalendar.nativeElement.offsetLeft;\n      this.myDays.nativeElement.scrollTo(dayActive.offsetLeft-calendarLeft - calendarWidth/2,0)\n      if(this.IsYearUse)\n      {\n        this.scrolllX = yearActive.offsetLeft -calendarWidth/4;\n\n           this.yearScroll.nativeElement.scrollTo(this.scrolllX,0);\n      }\n    }\n    scrollChange(deger:number)\n    {\n      this.scrolllX = this.scrolllX + deger;\n      this.yearScroll.nativeElement.scrollTo(this.scrolllX,0)\n    }\n    gunler: any[] = [];  \n    days: any[] = [];\n    getDays(mount: number) {\n  \n      this.days = [];\n      var gunSayisi = new Date(this.activeYear, mount, 0).getDate();// bir ayın içinde kaç gün olduğunu buluyor  \n      this.activeMount=mount;\n      for (let i = 1; i <= gunSayisi; i++) {    \n        var ta =mount.toString()+\"/\"+i.toString()+ \"/\" +this.activeYear;\n        \n        let gunAdi= this.datepipe.transform(ta, \"E\");     \n        var day ={dayNumber:i ,dayName:gunAdi};  \n        this.days.push(day);     \n  \n      } \n  \n    }\n    getYear(year:any)\n    {\n      this.activeYear = year;\n      this.getDays(1);\n    }    \n\n    yearAll:any[]=[];\n    getListYears()\n    {       \n        for(let i=1900; i<2101; i++)\n        {     \n          this.yearAll.push(i)\n        }  \n    }\n  \n    getTodo(day:number)\n    {         \n        this.activeDay =day;\n\n        var tarih=new Date(this.activeYear, this.activeMount, day);\n        this.startDate.emit(tarih);\n  \n    }\n}\n\n","\n<div>\n    <div class=\"calender\"  #myCalendar>\n        <div style=\"position: relative;\" *ngIf=\"IsYearUse\" >\n            <span (click)=\"scrollChange(-100);\"   style=\"position: absolute; top: 5px; right:85%;cursor: pointer;\">\n                <img src=\"/assets/left.png\">\n\n                </span>\n        <div style=\"margin: 3px 15%;\"class=\"yearsNames\" #yearsScroll>\n            <div *ngFor=\"let year of yearAll let i=index\" class=\"year\" [class.yearActive]=\"year==this.activeYear\"> \n                            <span (click)=\"getYear(year)\">{{year}}</span>\n                        </div>\n\n        </div>         \n            <span (click)=\"scrollChange(100);\" style=\"position: absolute; top: 5px; right:8%; cursor: pointer;\">   \n                              <img src=\"/assets/right.png\">\n            </span>\n        </div>\n        <div class=\"mountHeader\">\n            <div *ngFor=\"let ay of monthNames let i=index\" class=\"mount\" [class.mountActive]=\"this.activeMount ==i+1\"> \n                <span (click)=\"getDays(i+1)\" >{{(ay )?.substring(0,3)}}</span>\n             </div>\n        </div>\n         <div style=\"clear: left;\"></div>\n\n         <div class=\"mountDays\" id=\"mountDays\" #myDays>\n            <div *ngFor=\"let day of days let i=index\" class=\"day\">\n                              \n                  <div [class.dayActive]=\"this.activeDay == day.dayNumber\" (click)=\"getTodo(day.dayNumber)\" > {{day.dayNumber}}  </div> \n                    <br>\n                   <!-- {{ day.dayName }} -->\n                    {{daysNames[day.dayName]?.substring(0,3)}}                          \n            \n             </div>      \n         </div>\n    </div>\n</div>\n\n","import { DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SarCalendarComponent } from './sar-calendar.component';\n\n\n@NgModule({\n  declarations: [\n    SarCalendarComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n\n  ],\n  bootstrap: [SarCalendarComponent],\n  exports: [\n    SarCalendarComponent\n  ],\n  providers:[DatePipe]\n\n})\nexport class SarCalendarModule { }\n","/*\n * Public API Surface of sar-calendar\n */\n\nexport * from './lib/sar-calendar.service';\nexport * from './lib/sar-calendar.component';\nexport * from './lib/sar-calendar.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}